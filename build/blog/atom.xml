<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://huakucha.com/blog</id>
    <title>花裤衩Wiki Blog</title>
    <updated>2022-12-06T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://huakucha.com/blog"/>
    <subtitle>花裤衩Wiki Blog</subtitle>
    <icon>https://huakucha.com/img/favicon.ico</icon>
    <rights>Copyright © 2022 Huakucha, Inc.</rights>
    <entry>
        <title type="html"><![CDATA[一颗彪悍的种子]]></title>
        <id>juejinPost</id>
        <link href="https://huakucha.com/blog/juejinPost"/>
        <updated>2022-12-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[一颗彪悍的种子]]></summary>
        <content type="html"><![CDATA[<blockquote><p>一颗彪悍的种子发布的一些文章</p></blockquote><h2 class="anchor anchorWithStickyNavbar_loeA" id="网络原理">网络原理<a class="hash-link" href="#网络原理" title="标题的直接链接">​</a></h2><ol><li><a href="https://juejin.cn/post/7171621641837871112" target="_blank" rel="noopener noreferrer">让你真实的看见 TCP 三次握手和四次挥手到底是什么样！</a></li><li><a href="https://juejin.cn/post/7171131385598443534" target="_blank" rel="noopener noreferrer">用 Wireshark 让你看见 TCP 到底是什么样!</a></li><li><a href="https://juejin.cn/post/7155521745519116302" target="_blank" rel="noopener noreferrer">如果把网络原理倒过来看，从无到有，一切都清晰了（上）</a></li><li><a href="https://juejin.cn/post/7168111975879311397" target="_blank" rel="noopener noreferrer">如果把网络原理倒过来看，从无到有，一切都清晰了（中）</a></li><li><a href="https://juejin.cn/post/7170684141153812487" target="_blank" rel="noopener noreferrer">如果把网络原理倒过来看，从无到有，一切都清晰了（下）</a></li></ol><h2 class="anchor anchorWithStickyNavbar_loeA" id="spring">Spring<a class="hash-link" href="#spring" title="标题的直接链接">​</a></h2><ol><li><a href="https://juejin.cn/post/7124482061364609038" target="_blank" rel="noopener noreferrer">从Spring为什么要用IoC的支点，我撬动了整个Spring的源码脉络！</a></li><li><a href="https://juejin.cn/post/7126264114954895396" target="_blank" rel="noopener noreferrer">从源码看Spring如何解决循环依赖的脉络？鸡生蛋与蛋生鸡的问题！</a></li></ol><h2 class="anchor anchorWithStickyNavbar_loeA" id="并发">并发<a class="hash-link" href="#并发" title="标题的直接链接">​</a></h2><ol><li><a href="https://juejin.cn/post/7118919540959870989" target="_blank" rel="noopener noreferrer">为什么我们开发的系统会有并发Bug，并发Bug根源到底是什么？</a></li></ol><h2 class="anchor anchorWithStickyNavbar_loeA" id="jvm">JVM<a class="hash-link" href="#jvm" title="标题的直接链接">​</a></h2><ol><li><a href="https://juejin.cn/post/7098500546297856030" target="_blank" rel="noopener noreferrer">我从冯·诺依曼计算机体系，追溯到了JVM，一切原来如此！</a></li></ol><h2 class="anchor anchorWithStickyNavbar_loeA" id="mysql">MySQL<a class="hash-link" href="#mysql" title="标题的直接链接">​</a></h2><ol><li><a href="https://juejin.cn/post/7081065180301361183" target="_blank" rel="noopener noreferrer">MySQL 为什么采用 B+树作为索引？</a></li></ol>]]></content>
        <author>
            <name>花裤衩</name>
            <email>18151271579@163.com</email>
            <uri>https://github.com/MagicalZhu</uri>
        </author>
        <author>
            <name>一颗彪悍的种子</name>
            <uri>https://juejin.cn/user/3571630350551789/posts</uri>
        </author>
        <category label="掘金" term="掘金"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[阿里技术号]]></title>
        <id>aliSeata</id>
        <link href="https://huakucha.com/blog/aliSeata"/>
        <updated>2022-09-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[阿里技术号]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_loeA" id="推荐文章分布式事务">推荐文章(分布式事务)<a class="hash-link" href="#推荐文章分布式事务" title="标题的直接链接">​</a></h2><ol><li><a href="https://juejin.cn/post/7139824265825615885#heading-8" target="_blank" rel="noopener noreferrer">阿里 Seata 新版本终于解决了 TCC 模式的幂等、悬挂和空回滚问题</a></li></ol><h2 class="anchor anchorWithStickyNavbar_loeA" id="推荐文章消息队列">推荐文章(消息队列)<a class="hash-link" href="#推荐文章消息队列" title="标题的直接链接">​</a></h2><ol><li><a href="https://juejin.cn/post/7139827799795171359" target="_blank" rel="noopener noreferrer">RocketMQ 消息集成：多类型业务消息-普通消息</a></li></ol>]]></content>
        <author>
            <name>花裤衩</name>
            <email>18151271579@163.com</email>
            <uri>https://github.com/MagicalZhu</uri>
        </author>
        <author>
            <name>阿里巴巴</name>
            <uri>https://juejin.cn/user/1433418891007399</uri>
        </author>
        <category label="Alibaba" term="Alibaba"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何获得高并发的经验?]]></title>
        <id>gotConcurrencyAli</id>
        <link href="https://huakucha.com/blog/gotConcurrencyAli"/>
        <updated>2022-07-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[如何获得高并发的经验?]]></summary>
        <content type="html"><![CDATA[<p><strong>现实中，哪怕是大公司，高并发系统也是可遇不可求的。不过，高并发其实是可以通过压测来模拟的。</strong></p><p>高并发的背后，核心是高可用和低延迟。所以我们其实是想有能力设计一个系统，在高并发访问的时候，系统依然可用，而且响应速度不会变慢。</p><p>想提升高并发系统的设计和开发能力，有2个方面：</p><p><strong>一个是系统的学习相关理论；</strong></p><p><strong>一个是找一个目标系统，不断想办法去提升他的性能。</strong></p><p>前者是后者的理论基础。</p><p>如果想从事一个高并发系统开发的岗位，要学习的相关技术其实是很多的，这些技术核心就是解决高并发情况下如何保持系统的高可用和低延迟。</p><p>以Java工程师为例，互联网程序员面试中经常会考察的内容包括：</p><p><strong>（1） 架构设计：</strong></p><p>高可用与稳定性、事务一致性、多副本一致性、CAP理论。</p><p><strong>（2） 相关技术：</strong></p><p>多线程（JUC/AQS/线程池）、RPC调用及框架（如Thrift）、NIO及NIO框架（如Netty）、高并发框架（如Disruptor） 、微服务框架（SpringBoot）、微服务治理（Spring Cloud）、数据库相关技术（如：索引优化、分库分表、读写分离）、分布式缓存（如redis）、消息中间件系统（如RabbitMQ）、容器技术（如docker）。</p><p><strong>（3） 工具：</strong></p><p>系统性能查看（top、uptime、vmstat、iostat）、压测工具（如ab、locust、Jmeter、go）、线程分析（如jps、jstack）等。</p><p>当然，一开始，我们不可能逐一把这些技能全部掌握，我们可以从一个实际项目入手，不断的把这些技术用上去，发现哪些知识不足，再去补充相关的知识。</p><p><strong>“如何设计一个好的秒杀系统“，一定是互联网大厂面试中最常问的一个问题。所以从设计一个秒杀系统开始实践，是个不错的选择。</strong></p><p><strong>秒杀系统的特点：</strong></p><p><strong>（1）瞬时并发量大</strong></p><p>秒杀时会有大量用户在同一时间进行抢购，瞬时并发访问量突增 10 倍，甚至 100 倍以上都有。</p><p><strong>（2）库存量少</strong></p><p>一般秒杀活动商品量很少，这就导致了只有极少量用户能成功购买到。</p><p><strong>（3）业务简单</strong></p><p>流程比较简单，一般都是下订单、扣库存、支付订单。</p><p>设计秒杀系统的关键点：</p><p><strong>（1）限流</strong></p><p>由于活动库存量一般都是很少，对应的只有少部分用户才能秒杀成功。所以我们需要限制大部分用户流量，只准少量用户流量进入后端服务器。</p><p><strong>（2）削峰</strong></p><p>秒杀开始的那一瞬间，会有大量用户冲击进来，所以在开始时候会有一个瞬间流量峰值。如何把瞬间的流量峰值变得更平缓，是能否成功设计好秒杀系统的关键因素。实现流量削峰填谷，一般的采用缓存和 MQ 中间件来解决。</p><p><strong>（3）异步</strong></p><p>秒杀其实可以当做高并发系统来处理，在这个时候，可以考虑从业务上做兼容，将同步的业务，设计成异步处理的任务，提高网站的整体可用性。</p><p><strong>（4）缓存</strong></p><p>秒杀系统的瓶颈主要体现在下订单、扣减库存流程中。在这些流程中主要用到 OLTP 的数据库，类似 MySQL、Oracle。由于数据库底层采用 B+ 树的储存结构，对应我们随机写入与读取的效率，相对较低。如果我们把部分业务逻辑迁移到内存的缓存或者 Redis 中，会极大的提高并发效率。</p><p>从0到1搭建一个秒杀系统，也并不容易，涉及到很多前端、后端、中间件的技术。这个跟其实是所有公司的工作常态，大部分时间也是在搭架子，真正做技术优化的时间并不多，经常是在业务量突增或者大促活动来临时，集中搞一波性能优化。</p><p>所以，如果没有实际的高并发项目可做，自己弄个秒杀系统自娱自乐也是不错的。</p><p><strong>搭建系统 -&gt; 压测 -&gt; 发现问题 -&gt; 学习知识 -&gt; 优化系统，通过这样的循环，相信你一定既能体验到学习的乐趣，同时实力也大幅提升。</strong></p>]]></content>
        <author>
            <name>花裤衩</name>
            <email>18151271579@163.com</email>
            <uri>https://github.com/MagicalZhu</uri>
        </author>
        <author>
            <name>阿里巴巴</name>
            <uri>https://juejin.cn/user/1433418891007399</uri>
        </author>
        <category label="高并发" term="高并发"/>
        <category label="学习" term="学习"/>
        <category label="Alibaba" term="Alibaba"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[网站导航]]></title>
        <id>internal-navigation</id>
        <link href="https://huakucha.com/blog/internal-navigation"/>
        <updated>2022-07-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[常用的网址导航]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_loeA" id="-css工具">🔨 CSS工具<a class="hash-link" href="#-css工具" title="标题的直接链接">​</a></h2><p><a href="https://flukeout.github.io/" target="_blank" rel="noopener noreferrer"><strong>选择器学习游戏</strong></a>
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->
<a href="https://csslayout.io/" target="_blank" rel="noopener noreferrer"><strong>常见布局</strong></a>
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->
<a href="https://loading.io/flexbox/" target="_blank" rel="noopener noreferrer"><strong>flex生成</strong></a>
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->
<a href="https://cssgr.id/" target="_blank" rel="noopener noreferrer"><strong>grid生成</strong></a>
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->
<a href="https://www.guess-css.app/" target="_blank" rel="noopener noreferrer"><strong>css答题</strong></a></p><h2 class="anchor anchorWithStickyNavbar_loeA" id="️-设计师">👩‍⚖️‍ 设计师<a class="hash-link" href="#️-设计师" title="标题的直接链接">​</a></h2><p><a href="https://coolors.co" target="_blank" rel="noopener noreferrer"><strong>Coolors 调色板</strong></a>
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->
<a href="https://dribbble.com" target="_blank" rel="noopener noreferrer"><strong>Dribbble 设计稿</strong></a>
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->
<a href="https://www.freepik.com" target="_blank" rel="noopener noreferrer"><strong>Freepik 下载高质量的图片</strong></a></p><h2 class="anchor anchorWithStickyNavbar_loeA" id="-有趣的网站">🎊 有趣的网站<a class="hash-link" href="#-有趣的网站" title="标题的直接链接">​</a></h2><p><a href="https://www.thosefree.com/" target="_blank" rel="noopener noreferrer"><strong>Thosefree</strong></a></p>]]></content>
        <author>
            <name>花裤衩</name>
            <email>18151271579@163.com</email>
            <uri>https://github.com/MagicalZhu</uri>
        </author>
        <category label="分享" term="分享"/>
    </entry>
</feed>