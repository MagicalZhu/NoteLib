"use strict";(self.webpackChunkhuakucha=self.webpackChunkhuakucha||[]).push([[1278],{98266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>u,default:()=>s,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(87462),c=(n(67294),n(3905));n(61839);const r={id:"\u7f13\u5b58\u5b9e\u6218",title:"\u81ea\u5b9a\u4e49\u7f13\u5b58"},u=void 0,i={unversionedId:"\u5e76\u53d1\u7f16\u7a0b/\u5e76\u53d1\u63a7\u5236/\u7f13\u5b58\u5b9e\u6218",id:"\u5e76\u53d1\u7f16\u7a0b/\u5e76\u53d1\u63a7\u5236/\u7f13\u5b58\u5b9e\u6218",title:"\u81ea\u5b9a\u4e49\u7f13\u5b58",description:"\u5229\u7528\u5e76\u53d1\u5de5\u5177\u7c7b\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u7f13\u5b58",source:"@site/docs/\u5e76\u53d1\u7f16\u7a0b/\u5e76\u53d1\u63a7\u5236/4.1\u5e76\u53d1\u5b9e\u6218-\u7f13\u5b58.md",sourceDirName:"\u5e76\u53d1\u7f16\u7a0b/\u5e76\u53d1\u63a7\u5236",slug:"/\u5e76\u53d1\u7f16\u7a0b/\u5e76\u53d1\u63a7\u5236/\u7f13\u5b58\u5b9e\u6218",permalink:"/docs/\u5e76\u53d1\u7f16\u7a0b/\u5e76\u53d1\u63a7\u5236/\u7f13\u5b58\u5b9e\u6218",draft:!1,editUrl:"https://github.com/MagicalZhu/NoteLib/tree/main/docs/\u5e76\u53d1\u7f16\u7a0b/\u5e76\u53d1\u63a7\u5236/4.1\u5e76\u53d1\u5b9e\u6218-\u7f13\u5b58.md",tags:[],version:"current",lastUpdatedBy:"YuLiang Zhu",lastUpdatedAt:1670289592,formattedLastUpdatedAt:"2022\u5e7412\u67086\u65e5",frontMatter:{id:"\u7f13\u5b58\u5b9e\u6218",title:"\u81ea\u5b9a\u4e49\u7f13\u5b58"},sidebar:"basicSideBar",previous:{title:"FutureTask",permalink:"/docs/\u5e76\u53d1\u7f16\u7a0b/\u5e76\u53d1\u63a7\u5236/FutureTask"}},l={},p=[{value:"\u7248\u672c\u8fed\u4ee3",id:"\u7248\u672c\u8fed\u4ee3",level:2},{value:"V1.0",id:"v10",level:3},{value:"V1.1",id:"v11",level:3},{value:"V1.2",id:"v12",level:3},{value:"V1.3",id:"v13",level:3},{value:"V1.4",id:"v14",level:3},{value:"V1.4.1",id:"v141",level:3},{value:"V1.5",id:"v15",level:3},{value:"V1.5.1",id:"v151",level:3},{value:"V1.6",id:"v16",level:3},{value:"\u6d4b\u8bd5",id:"\u6d4b\u8bd5",level:2}],o={toc:p};function s(e){let{components:t,...r}=e;return(0,c.kt)("wrapper",(0,a.Z)({},o,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"\u5229\u7528\u5e76\u53d1\u5de5\u5177\u7c7b\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u7f13\u5b58")),(0,c.kt)("h2",{id:"\u7248\u672c\u8fed\u4ee3"},"\u7248\u672c\u8fed\u4ee3"),(0,c.kt)("h3",{id:"v10"},"V1.0"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"\u5b9e\u73b0: 1.0\u7248\u672c,\u7b80\u5355\u7684\u4f7f\u7528HashMap"),(0,c.kt)("li",{parentName:"ul"},"\u95ee\u9898",(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},"HashMap\u5728\u591a\u7ebf\u7a0b\u7684\u573a\u666f\u4e0b\u5bb9\u6613\u51fa\u73b0\u6b7b\u5faa\u73af\u7684\u95ee\u9898\uff0c\u5bfc\u81f4CPU\u62c9\u6ee1"),(0,c.kt)("li",{parentName:"ul"},"\u590d\u7528\u6027\u5dee,\u5c06\u67e5DB\u7684\u64cd\u4f5c\u8026\u5408\u5230\u4e86\u7f13\u5b58\u7c7b\u4e2d\uff0c\u4e0d\u9002\u7528\u4e8e\u5176\u4ed6\u4e1a\u52a1"))),(0,c.kt)("li",{parentName:"ul"},"\u89e3\u51b3\u601d\u8def:",(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},"\u5982\u679c\u4f7f\u7528",(0,c.kt)("inlineCode",{parentName:"li"},"synchronized")," \u5c06get\u5b9a\u4e49\u4e3a\u540c\u6b65\u65b9\u6cd5\u7684\u8bdd\uff0c\u6027\u80fd\u5dee\u3002\u56e0\u4e3a\u540c\u6b65\u65b9\u6cd5\u7684\u9501\u4f4f\u8303\u56f4\u5927,\u5e76\u4e14\u53d8\u6210\u4e86\u4e32\u884c"),(0,c.kt)("li",{parentName:"ul"},"\u91c7\u7528\u9002\u5f53\u7684\u8bbe\u8ba1\u6a21\u5f0f")))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * <b>\u6700\u7b80\u5355\u7684Cache - HashMap</b>\n *\n * @author <a href="mailto:zhuyuliangm@gmail.com">zyl</a>\n */\npublic class Cache1 {\n    // \u7b80\u5355\u7684\u7f13\u5b58,\u5728\u5355\u7ebf\u7a0b\u7684\u573a\u666f\u4e0b\u53ef\u4ee5\u4f7f\u7528.\u4f46\u662f\u5728\u591a\u7ebf\u7a0b\u4e0b,HashMap\u5bb9\u6613\u51fa\u73b0\u6b7b\u5faa\u73af\u7684\u95ee\u9898\n    private  final HashMap<String,Object> cache = new HashMap<>();\n\n    public synchronized Object get(String key) throws InterruptedException {\n        Object result = cache.get(key);\n        if (result == null) {\n            result = doSearchInDb(key);\n            cache.put(key, result);\n        }\n        return result;\n    }\n\n    private Object doSearchInDb(String key) throws InterruptedException {\n        TimeUnit.SECONDS.sleep(5);\n        return key;\n    }\n}\n')),(0,c.kt)("h3",{id:"v11"},"V1.1"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"\u66f4\u65b0\u70b9: ",(0,c.kt)("strong",{parentName:"li"},"\u901a\u8fc7\u88c5\u9970\u8005\u6a21\u5f0f\u5b9e\u73b0\u7f13\u5b58\u4e0e\u4e1a\u52a1\u7684\u89e3\u8026"))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * <b>\u7b80\u5355\u7684\u8ba1\u7b97\u63a5\u53e3</b>\n *\n * @author <a href="mailto:zhuyuliangm@gmail.com">zyl</a>\n */\npublic interface Compute<K,V> {\n    V doCompute(K k) throws Exception;\n}\n\n/**\n * <b>\u6570\u636e\u5e93\u67e5\u8be2</b>\n *\n * @author <a href="mailto:zhuyuliangm@gmail.com">zyl</a>\n */\npublic class DbCompute implements Compute<String, Object> {\n    @Override\n    public Object doCompute(String key) throws Exception {\n        System.out.println("\u4ece\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u6570\u636e...");\n        TimeUnit.SECONDS.sleep(5);\n        return new Person(key);\n    }\n}                \n\n\npublic class Cache2 {\n    private  final HashMap<String,Object> cache = new HashMap<>();\n    private  final Compute<String,Object> c;\n    public Cache2(Compute<String, Object> c) {\n        this.c = c;\n    }\n    public synchronized Object get(String key) throws Exception {\n        Object result = cache.get(key);\n        if (result == null) {\n            result = c.doCompute(key);\n            cache.put(key, result);\n        }\n        return result;\n    }\n\n    public static void main(String[] args) throws Exception {\n        Cache2 cache = new Cache2(new DbCompute());\n        Object lisi = cache.get("lisi");\n        System.out.println(lisi);\n        lisi = cache.get("lisi");\n        System.out.println(lisi);\n    }\n}\n\n')),(0,c.kt)("h3",{id:"v12"},"V1.2"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"\u66f4\u65b0\u70b9: \u7f29\u5c0f\u9501\u7684\u7c92\u5ea6,\u7528\u540c\u6b65\u540c\u6b65\u5757\u66ff\u4ee3\u540c\u6b65\u65b9\u6cd5"),(0,c.kt)("li",{parentName:"ul"},"\u7f3a\u70b9:",(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},"\u867d\u7136\u4fdd\u8bc1\u4e86\u5e76\u53d1\u5199\u7684\u7ebf\u7a0b\u5b89\u5168\uff0c\u4f46\u662f\u65e0\u6cd5\u4fdd\u8bc1\u5e76\u53d1\u8bfb\u7684\u7ebf\u7a0b\u5b89\u5168 -> get()")))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'public class Cache3 {\n    private  final HashMap<String,Object> cache = new HashMap<>();\n    private  final Compute<String,Object> c;\n    public Cache3(Compute<String, Object> c) {\n        this.c = c;\n    }\n    public  Object get(String key) throws Exception {\n        Object result = cache.get(key);\n        if (result == null) {\n            result = c.doCompute(key);\n            // \u4f7f\u7528 \u540c\u6b65\u5757\uff0c\u800c\u4e0d\u662f\u540c\u6b65\u65b9\u6cd5\n            synchronized(this) {\n                cache.put(key, result);\n            }\n        }\n        return result;\n    }\n\n    public static void main(String[] args) throws Exception {\n        Cache3 cache = new Cache3(new DbCompute());\n        Object lisi = cache.get("lisi");\n        System.out.println(lisi);\n        lisi = cache.get("lisi");\n        System.out.println(lisi);\n    }\n}\n')),(0,c.kt)("h3",{id:"v13"},"V1.3"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"\u66f4\u65b0\u70b9: \u4f7f\u7528 ConcurrentHashMap \u66ff\u4ee3 HashMap"),(0,c.kt)("li",{parentName:"ul"},"\u7f3a\u70b9",(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},"\u79fb\u9664\u4e86\u9501,\u4e24\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u4eceMap\u4e2d\u8bfb\u6570\u636e\uff0c\u90a3\u4e48\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u6ca1\u6709\u8bfb\u53d6\u5230\u5c31\u90fd\u4f1a\u8fdb\u884c\u4e1a\u52a1\u5904\u7406(\u6570\u636e\u5e93\u67e5\u8be2),\u5bfc\u81f4\u91cd\u590d\u8ba1\u7b97")))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'public class Cache4 {\n    private  final ConcurrentHashMap<String,Object> cache = new ConcurrentHashMap<>();\n    private  final Compute<String,Object> c;\n    public Cache4(Compute<String, Object> c) {\n        this.c = c;\n    }\n    public  Object get(String key) throws Exception {\n        System.out.println("\u8fdb\u5165\u7f13\u5b58\u673a\u5236...");\n        Object result = cache.get(key);\n        if (result == null) {\n            result = c.doCompute(key);\n                cache.put(key, result);\n        }\n        return result;\n    }\n\n    public static void main(String[] args) throws Exception {\n        Cache4 cache = new Cache4(new DbCompute());\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u4e01\u4e00");\n                System.out.println("thread1:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u5b59\u4e8c");\n                System.out.println("thread2:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u4e01\u4e00");\n                System.out.println("thread3:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n    }\n}\n')),(0,c.kt)("p",null,(0,c.kt)("img",{src:n(87784).Z,width:"654",height:"226"})),(0,c.kt)("h3",{id:"v14"},"V1.4"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"\u66f4\u65b0\u70b9: \u4f7f\u7528Future\u8fdb\u884c\u5f02\u6b65\u8ba1\u7b97\u907f\u514d\u591a\u6b21\u8ba1\u7b97,\u901a\u8fc7\u5f02\u6b65\u8ba1\u7b97\u7684\u65b9\u5f0f\u907f\u514d\u963b\u585e\u5f0f\u8ba1\u7b97"),(0,c.kt)("li",{parentName:"ul"},"\u7f3a\u70b9",(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},"\u6ca1\u6709\u771f\u6b63\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u6267\u884c",(0,c.kt)("inlineCode",{parentName:"li"},"cache.get(key)"),"\u65b9\u6cd5\uff0c\u6b64\u65f6\u90fd\u6ca1\u6709\u5c06Future\u5b58\u5165Cache\u4e2d")))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * <b>\u4f7f\u7528Future\u6765\u907f\u514d\u91cd\u590d\u8ba1\u7b971.0</b>\n *\n * @author <a href="mailto:zhuyuliangm@gmail.com">zyl</a>\n */\npublic class Cache5 {\n    private  final Map<String, FutureTask<Object>> cache = new ConcurrentHashMap<>();\n    private  final Compute<String,Object> c;\n    public Cache5(Compute<String, Object> c) {\n        this.c = c;\n    }\n    public  Object get(String key) throws Exception {\n        FutureTask<Object> future;\n            future = cache.get(key);\n            if (future == null) {\n                future = new FutureTask<>(() -> c.doCompute(key));\n                cache.put(key, future);\n                System.out.println("\u5f00\u59cb\u6267\u884cFutureTask\u5f02\u6b65\u8ba1\u7b97\u4efb\u52a1");\n                future.run();\n            }\n        return future.get();\n    }\n\n    public static void main(String[] args) throws Exception {\n        Cache5 cache = new Cache5(new DbCompute());\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u4e01\u4e00");\n                System.out.println("thread1:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u5b59\u4e8c");\n                System.out.println("thread2:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u5b59\u4e8c");\n                System.out.println("thread3:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n    }\n}\n')),(0,c.kt)("h3",{id:"v141"},"V1.4.1"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"\u66f4\u65b0\u70b9: \u901a\u8fc7ConcurrentHashMap\u7684\u7ec4\u5408\u64cd\u4f5c(putIfAbsent)\u89e3\u51b3V1.4\u7684bug")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * <b>\u4f7f\u7528Future\u6765\u907f\u514d\u91cd\u590d\u8ba1\u7b971.0</b>\n *\n * @author <a href="mailto:zhuyuliangm@gmail.com">zyl</a>\n */\npublic class Cache6 {\n    private  final Map<String, FutureTask<Object>> cache = new ConcurrentHashMap<>();\n    private  final Compute<String,Object> c;\n    public Cache6(Compute<String, Object> c) {\n        this.c = c;\n    }\n    public  Object get(String key) throws Exception {\n        FutureTask<Object> future = cache.get(key);\n        if (future == null) {\n            FutureTask<Object> task = new FutureTask<>(() -> c.doCompute(key));\n            future = cache.putIfAbsent(key, task);\n            if (future == null) {\n                future = task;\n                System.out.println("\u5f00\u59cb\u6267\u884cFutureTask\u5f02\u6b65\u8ba1\u7b97\u4efb\u52a1");\n                future.run();\n            }\n        }\n        return future.get();\n    }\n\n    public static void main(String[] args) throws Exception {\n        Cache6 cache = new Cache6(new DbCompute());\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u4e01\u4e00");\n                System.out.println("thread1:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u5b59\u4e8c");\n                System.out.println("thread2:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u5b59\u4e8c");\n                System.out.println("thread3:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n    }\n}\n')),(0,c.kt)("p",null,(0,c.kt)("img",{src:n(46411).Z,width:"405",height:"159"})),(0,c.kt)("h3",{id:"v15"},"V1.5"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"\u66f4\u65b0\u70b9: \u5f02\u5e38\u7684\u5904\u7406 + \u5931\u8d25\u91cd\u8bd5"),(0,c.kt)("li",{parentName:"ul"},"\u7f3a\u70b9",(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("strong",{parentName:"li"},"\u7f13\u5b58\u6c61\u67d3"),": \u867d\u7136\u4f7f\u7528Future\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u4f46\u662f\u5982\u679c\u7f13\u5b58\u4e2d\u7684FutureTask\u7b2c\u4e00\u6b21\u8ba1\u7b97\u5931\u8d25\u540e\u6ca1\u6709\u5c06Future\u6e05\u7406\u6389\u4f9d\u65e7\u5b58\u5728Map\u4e2d,\u90a3\u4e48\u4e0b\u6b21get\u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c\u65f6\u8fd8\u662f\u4f1a\u629b\u51fa\u5f02\u5e38,\u9020\u6210\u53ea\u8981\u6709\u4e00\u6b21\u5f02\u5e38\uff0c\u5219\u4f1a\u4e00\u76f4\u91cd\u8bd5")))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'public class Cache7 {\n    private  final Map<String, FutureTask<Object>> cache = new ConcurrentHashMap<>();\n    private  final Compute<String,Object> c;\n    public Cache7(Compute<String, Object> c) {\n        this.c = c;\n    }\n    public  Object get(String key) throws ExecutionException, InterruptedException {\n        while (true) {\n            FutureTask<Object> future = cache.get(key);\n            if (future == null) {\n                FutureTask<Object> task = new FutureTask<>(() -> c.doCompute(key));\n                future = cache.putIfAbsent(key, task);\n                if (future == null) {\n                    future = task;\n                    System.out.println("\u5f00\u59cb\u6267\u884cFutureTask\u5f02\u6b65\u8ba1\u7b97\u4efb\u52a1");\n                    future.run();\n                }\n            }\n            try {\n                return future.get();\n            } catch (CancellationException e) {\n                System.out.println("\u88ab\u53d6\u6d88\u4e86");\n                throw e;\n            }\n            catch (InterruptedException e) {\n                System.out.println("\u88ab\u4e2d\u65ad\u4e86");\n                throw e;\n            } catch (ExecutionException e) {\n                System.out.println("\u4efb\u52a1\u6267\u884c\u5f02\u5e38,\u91cd\u8bd5");\n            }\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        Cache7 cache = new Cache7(new MayFailCompute());\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u4e01\u4e00");\n                System.out.println("thread1:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u5b59\u4e8c");\n                System.out.println("thread2:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n        new Thread(() -> {\n            try {\n                Object p = cache.get("\u5b59\u4e8c");\n                System.out.println("thread3:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n    }\n}\n')),(0,c.kt)("h3",{id:"v151"},"V1.5.1"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"\u66f4\u65b0\u70b9: \u4fee\u590d\u7f13\u5b58\u6c61\u67d3\u7684\u95ee\u9898,\u8ba1\u7b97\u5931\u8d25\u540e\u5c06\u7f13\u5b58\u4e2d\u5bf9\u5e94\u7684Future\u79fb\u9664\u6389,\u5e76\u4e14\u91cd\u65b0\u8ba1\u7b97")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'public class Cache8 {\n    private  final Map<String, FutureTask<Object>> cache = new ConcurrentHashMap<>();\n    private  final Compute<String,Object> c;\n    public Cache8(Compute<String, Object> c) {\n        this.c = c;\n    }\n    public  Object get(String key) throws ExecutionException, InterruptedException {\n        while (true) {\n            FutureTask<Object> future = cache.get(key);\n            if (future == null) {\n                FutureTask<Object> task = new FutureTask<>(() -> c.doCompute(key));\n                future = cache.putIfAbsent(key, task);\n                if (future == null) {\n                    future = task;\n                    System.out.println("\u5f00\u59cb\u6267\u884cFutureTask\u5f02\u6b65\u8ba1\u7b97\u4efb\u52a1");\n                    future.run();\n                }\n            }\n            try {\n                return future.get();\n            } catch (CancellationException e) {\n                System.out.println("\u88ab\u53d6\u6d88\u4e86");\n                // \u6267\u884c\u5931\u8d25\u540e,\u5c06Future\u4ececache\u4e2d\u79fb\u9664\n                cache.remove(key);\n                throw e;\n            }\n            catch (InterruptedException e) {\n                System.out.println("\u88ab\u4e2d\u65ad\u4e86");\n                // \u6267\u884c\u5931\u8d25\u540e,\u5c06Future\u4ececache\u4e2d\u79fb\u9664\n                cache.remove(key);\n                throw e;\n            } catch (ExecutionException e) {\n                System.out.println("\u4efb\u52a1\u6267\u884c\u5f02\u5e38,\u91cd\u8bd5");\n                // \u6267\u884c\u5931\u8d25\u540e,\u5c06Future\u4ececache\u4e2d\u79fb\u9664\n                cache.remove(key);\n            }\n        }\n    } \n}\n\n')),(0,c.kt)("h3",{id:"v16"},"V1.6"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"\u66f4\u65b0\u70b9: \u7f13\u5b58\u8fc7\u671f\u8bbe\u5b9a")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'public class Cache9 {\n    private  final Map<String, FutureTask<Object>> cache = new ConcurrentHashMap<>();\n    private  final Compute<String,Object> c;\n    public Cache9(Compute<String, Object> c) {\n        this.c = c;\n    }\n    private static final Logger log = LoggerFactory.getLogger(Cache9.class);\n\n    // \u5b9a\u4e49\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\u7ebf\u7a0b\u6c60\n    private final ScheduledThreadPoolExecutor scheduledThreadPoolExecutor = new ScheduledThreadPoolExecutor(Runtime.getRuntime().availableProcessors());\n\n    public  Object get(String key) throws ExecutionException, InterruptedException {\n        while (true) {\n            FutureTask<Object> future = cache.get(key);\n            if (future == null) {\n                FutureTask<Object> task = new FutureTask<>(() -> c.doCompute(key));\n                future = cache.putIfAbsent(key, task);\n                if (future == null) {\n                    future = task;\n                    log.info("\u5f00\u59cb\u6267\u884cFutureTask\u5f02\u6b65\u8ba1\u7b97\u4efb\u52a1");\n                    future.run();\n                }\n            }\n            try {\n                return future.get();\n            } catch (CancellationException e) {\n                log.info("\u88ab\u53d6\u6d88\u4e86");\n                throw e;\n            }\n            catch (InterruptedException e) {\n                log.info("\u88ab\u4e2d\u65ad\u4e86");\n                throw e;\n            } catch (ExecutionException e) {\n                log.info("\u4efb\u52a1\u6267\u884c\u5f02\u5e38,\u91cd\u8bd5");\n                // \u6267\u884c\u5931\u8d25\u540e,\u5c06Future\u4ececache\u4e2d\u79fb\u9664\n                cache.remove(key);\n            }\n        }\n    }\n    public  Object get(String key, long delay) throws ExecutionException, InterruptedException {\n        // \u5b9a\u4e49\u6e05\u7406\u7f13\u5b58\u529f\u80fd\n        scheduledThreadPoolExecutor.schedule(() -> {\n            FutureTask<Object> task = cache.get(key);\n            if (task != null) {\n                // \u4efb\u52a1\u6ca1\u6709\u5b8c\u6210\u7684\u8bdd\u5c31\u53d6\u6d88\u4efb\u52a1\n                if (!task.isDone()) {\n                    task.cancel(true);\n                }\n                cache.remove(key);\n            }\n        },delay, TimeUnit.MILLISECONDS);\n        return get(key);\n    }\n\n    public static void main(String[] args) throws Exception {\n        Cache9 cache = new Cache9(new MayFailCompute());\n        new Thread(() -> {\n            try {\n                // \u8bbe\u7f6e\u7f13\u5b58\u65f6\u95f410s\n                Object p = cache.get("\u4e01\u4e00", 10000);\n                log.info("\u7b2c\u4e00\u6b21\u53d6\u503c:"+p);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }).start();\n        // 8\u79d2\u540e\u53d6\u503c\n        TimeUnit.SECONDS.sleep(8);\n        log.info("\u7b2c\u4e8c\u6b21\u53d6\u503c:"+cache.get("\u4e01\u4e00"));\n\n        // 3s\u540e\u518d\u6b21\u53d6\u503c\u5df2\u7ecf\u5931\u6548\u4e86\n        TimeUnit.SECONDS.sleep(3);\n        log.info("\u7b2c\u4e09\u6b21\u53d6\u503c:"+cache.get("\u4e01\u4e00"));\n    }\n}\n')),(0,c.kt)("p",null,(0,c.kt)("img",{src:n(46015).Z,width:"769",height:"332"})),(0,c.kt)("h2",{id:"\u6d4b\u8bd5"},"\u6d4b\u8bd5"),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"\u4f7f\u7528CountDownLatch \u8fdb\u884c\u538b\u529b\u6d4b\u8bd5,1000\u4e2a\u7ebf\u7a0b\u540c\u65f6\u6267\u884c\u8ba1\u7b97\u64cd\u4f5c")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * <b>\u4f7f\u7528CountDownLatch\u8fdb\u884c\u538b\u6d4b</b>\n *\n * @author <a href="mailto:zhuyuliangm@gmail.com">zyl</a>\n */\npublic class Test {\n    private static final CountDownLatch LATCH = new CountDownLatch(1);\n    private static final Cache9 CACHE_9 = new Cache9(new DbCompute());\n    private static final Logger log = LoggerFactory.getLogger(Test.class);\n\n    public static void main(String[] args) throws InterruptedException {\n        ThreadPoolExecutor executor = new ThreadPoolExecutor(8, 8, 60L, TimeUnit.SECONDS, new LinkedBlockingDeque<>());\n        Stopwatch stopwatch = Stopwatch.createStarted();\n        for (int i = 1; i <= 1000; i++) {\n            executor.execute(() -> {\n                try {\n                    LATCH.await();\n                    CACHE_9.get("jacy");\n                } catch (ExecutionException e) {\n                    e.printStackTrace();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            });\n        }\n        log.info("\u7b49\u5f85\u4efb\u52a1\u63d0\u4ea4\u5b8c\u6210");\n        TimeUnit.SECONDS.sleep(5);\n        log.info("\u4efb\u52a1\u63d0\u4ea4\u5b8c\u6210,CountDownLatch\u8ba1\u6570\u5668\u653e\u884c");\n        LATCH.countDown();\n        executor.shutdown();\n        while (!executor.isTerminated()) {\n\n        }\n        stopwatch.stop();\n        // \u603b\u8017\u65f6 = \u6570\u636e\u5e93\u67e5\u8be2\u65f6\u95f4(5s) + \u4e3b\u7ebf\u7a0b\u7b49\u5f85\u4efb\u52a1\u63d0\u4ea4\u5b8c\u6210\u7684\u65f6\u95f4(5s) + \u5b9e\u9645\u7f13\u5b58\u67e5\u8be2\u65f6\u95f4\n        log.info("\u53bb\u9664\u7b49\u5f85\u4efb\u52a1\u63d0\u4ea4\u5b8c\u6210\u7684\u8017\u65f6:{}",stopwatch.elapsed(TimeUnit.MILLISECONDS));\n    }\n}\n')),(0,c.kt)("p",null,(0,c.kt)("img",{src:n(85049).Z,width:"870",height:"120"})))}s.isMDXComponent=!0},87784:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image-20211212104641357-54d5509d00eb021bcdf25db75125a1aa.png"},46411:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image-20211212135442399-2011b81fe310d82e4795ad502416c33e.png"},46015:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image-20211212150748879-634b79443d5e66cdabf47c97a5cb7035.png"},85049:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image-20211212153121899-cdc748f666a8c29166b34d8a94f4baa4.png"}}]);