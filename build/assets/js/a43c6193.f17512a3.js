"use strict";(self.webpackChunkhuakucha=self.webpackChunkhuakucha||[]).push([[7786],{33366:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>u});var a=t(87462),l=(t(67294),t(3905));t(61839);const i={id:"illustrationOfAlgorithm",title:"\u56fe\u89e3\u7b97\u6cd5\u6570\u636e\u7ed3\u6784"},o=void 0,r={unversionedId:"LeetCode\u5237\u9898\u7b14\u8bb0/illustrationOfAlgorithm",id:"LeetCode\u5237\u9898\u7b14\u8bb0/illustrationOfAlgorithm",title:"\u56fe\u89e3\u7b97\u6cd5\u6570\u636e\u7ed3\u6784",description:"\u7b97\u6cd5\u9898\u5185\u5bb9\u6765\u81ea\u4e8e \u56fe\u89e3\u7b97\u6cd5\u6570\u636e\u7ed3\u6784",source:"@site/docs/LeetCode\u5237\u9898\u7b14\u8bb0/\u56fe\u89e3\u7b97\u6cd5\u6570\u636e\u7ed3\u6784.md",sourceDirName:"LeetCode\u5237\u9898\u7b14\u8bb0",slug:"/LeetCode\u5237\u9898\u7b14\u8bb0/illustrationOfAlgorithm",permalink:"/docs/LeetCode\u5237\u9898\u7b14\u8bb0/illustrationOfAlgorithm",draft:!1,editUrl:"https://github.com/MagicalZhu/NoteLib/tree/main/docs/LeetCode\u5237\u9898\u7b14\u8bb0/\u56fe\u89e3\u7b97\u6cd5\u6570\u636e\u7ed3\u6784.md",tags:[],version:"current",lastUpdatedBy:"YuLiang Zhu",lastUpdatedAt:1670289592,formattedLastUpdatedAt:"2022\u5e7412\u67086\u65e5",frontMatter:{id:"illustrationOfAlgorithm",title:"\u56fe\u89e3\u7b97\u6cd5\u6570\u636e\u7ed3\u6784"},sidebar:"leetCodeSidebar",previous:{title:"LeetCode\u5237\u9898\u7b14\u8bb0",permalink:"/docs/leetCode"}},p={},u=[{value:"\u6570\u636e\u7ed3\u6784",id:"\u6570\u636e\u7ed3\u6784",level:2},{value:"\u66ff\u6362\u7a7a\u683c",id:"\u66ff\u6362\u7a7a\u683c",level:3},{value:"\u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868",id:"\u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868",level:3},{value:"\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217",id:"\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217",level:3},{value:"\u8868\u793a\u6570\u503c\u7684\u5b57\u7b26\u4e32",id:"\u8868\u793a\u6570\u503c\u7684\u5b57\u7b26\u4e32",level:3},{value:"\u53cd\u8f6c\u94fe\u8868",id:"\u53cd\u8f6c\u94fe\u8868",level:3},{value:"\u5305\u542b min \u51fd\u6570\u7684\u6808",id:"\u5305\u542b-min-\u51fd\u6570\u7684\u6808",level:3},{value:"\u590d\u6742\u94fe\u8868\u7684\u590d\u5236",id:"\u590d\u6742\u94fe\u8868\u7684\u590d\u5236",level:3}],d={toc:u};function c(n){let{components:e,...t}=n;return(0,l.kt)("wrapper",(0,a.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u7b97\u6cd5\u9898\u5185\u5bb9\u6765\u81ea\u4e8e ",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/leetbook/read/illustration-of-algorithm"},"\u56fe\u89e3\u7b97\u6cd5\u6570\u636e\u7ed3\u6784"))),(0,l.kt)("h2",{id:"\u6570\u636e\u7ed3\u6784"},"\u6570\u636e\u7ed3\u6784"),(0,l.kt)("h3",{id:"\u66ff\u6362\u7a7a\u683c"},"\u66ff\u6362\u7a7a\u683c"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},'\u95ee\u9898: \u8bf7\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u628a\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u7a7a\u683c\u66ff\u6362\u6210"%20"\u3002\n\u601d\u8def: java\u4e2d\u7684\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684,\u9700\u8981\u904d\u5386\u6dfb\u52a0\u8fdb\u65b0\u7684\u6570\u7ec4,\u5982\u679c\u662f\u7a7a\u683c\u5c31\u63d2\u5165 "%20"'),(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6:O(n)"),(0,l.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6:O(n)"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n  public static String replaceSpace(String s) {\n    StringBuilder sb = new StringBuilder();\n    char[] array = s.toCharArray();\n    for (char c : array) {\n      if (c == ' ') {\n        sb.append(\"%20\");\n      }else {\n        sb.append(c);\n      }\n    }\n    return sb.toString();\n  }\n}\n")),(0,l.kt)("h3",{id:"\u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868"},"\u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u95ee\u9898: \u8f93\u5165\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u4ece\u5c3e\u5230\u5934\u53cd\u8fc7\u6765\u8fd4\u56de\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\uff08\u7528\u6570\u7ec4\u8fd4\u56de\uff09"),(0,l.kt)("p",{parentName:"blockquote"},"\u793a\u4f8b: \u8f93\u5165\uff1ahead = ","[1,3,2]","   \u8f93\u51fa\uff1a","[2,3,1]")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// \u5148\u83b7\u53d6\u957f\u5ea6,\u4f9d\u636e\u957f\u5ea6\u521b\u5efa\u6570\u7ec4,\u7136\u540e\u53cd\u5411\u63d2\u5165\u6570\u636e\nclass Solution {\n  public int[] reversePrint(ListNode head) {\n    // \u83b7\u53d6\u957f\u5ea6\n    ListNode tmp = head;\n    int length = 0;\n    while(tmp != null) {\n      ++length;\n      tmp = tmp.next;\n    }\n    // \u521b\u5efa\u6570\u7ec4\n    int[] result = new int[length];\n    int lastIndex = length - 1;\n    tmp = head;\n    while(tmp != null) {\n      result[lastIndex] = tmp.val;\n      --lastIndex;\n      tmp = tmp.next;\n    }\n    return result;\n  }\n\n  class ListNode {\n    int val;\n    ListNode next;\n    ListNode(int x) {\n      this.val = x;\n    }\n  }\n}\n\n")),(0,l.kt)("h3",{id:"\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217"},"\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u95ee\u9898: \u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u3002\u961f\u5217\u7684\u58f0\u660e\u5982\u4e0b\uff0c\u8bf7\u5b9e\u73b0\u5b83\u7684\u4e24\u4e2a\u51fd\u6570 appendTail \u548c deleteHead \uff0c\u5206\u522b\u5b8c\u6210\u5728\u961f\u5217\u5c3e\u90e8\u63d2\u5165\u6574\u6570\u548c\u5728\u961f\u5217\u5934\u90e8\u5220\u9664\u6574\u6570\u7684\u529f\u80fd\u3002(\u82e5\u961f\u5217\u4e2d\u6ca1\u6709>\u5143\u7d20\uff0cdeleteHead\xa0\u64cd\u4f5c\u8fd4\u56de -1 )"),(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u8f93\u5165: ",(0,l.kt)("inlineCode",{parentName:"p"},'["CQueue","appendTail","deleteHead","deleteHead"]    [[],[3],[],[]]'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u8f93\u51fa: ",(0,l.kt)("inlineCode",{parentName:"p"},"[null,null,3,-1]")),(0,l.kt)("p",{parentName:"li"},"\u961f\u5217: \u5148\u8fdb\u5148\u51fa  \u6808:\u5148\u8fdb\u540e\u51fa"))),(0,l.kt)("p",{parentName:"blockquote"},"\u6808A\u5f39\u51fa\u5c3e\u90e8\u5143\u7d20\u5230\u6808B\u4e2d,\u7b49\u540c\u4e8e\u5c06\u6808A\u4e2d\u7684\u5143\u7d20\u53cd\u8f6c\u4e86")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"import java.util.LinkedList;\n\n/**\n * Your CQueue object will be instantiated and called as such:\n * CQueue obj = new CQueue();\n * obj.appendTail(value);\n * int param_2 = obj.deleteHead();\n */\n\npublic class CQueue {\n  LinkedList<Integer> stackA;\n  LinkedList<Integer> stackB;\n\n  public CQueue() {\n    stackA = new LinkedList<Integer>();\n    stackB = new LinkedList<Integer>();\n  }\n\n  public void appendTail(int value) {\n    stackA.push(value);\n  }\n\n  public int deleteHead() {\n    // stackB\u6709\u6570\u636e=>\u961f\u5217\u5b58\u6709\u6570\u636e\n    if (!stackB.isEmpty()) {\n      return stackB.pop();\n    }\n    // stackA,stackB\u90fd\u6ca1\u6709\u6570\u636e => \u5220\u9664\u5b8c\u4e86 \u6216 \u6ca1\u6709\u6dfb\u52a0\u6570\u636e\n    if (stackA.isEmpty()) return -1;\n\n    // stackB\u6ca1\u6709\u6570\u636e,stackA\u6709\u6570\u636e => \u961f\u5217\u6ca1\u6709\u6709\u6570\u636e => \u4ecestackA\u4e2d\u5c06\u540e\u9762\u6dfb\u52a0\u7684\u6570\u636e\u5012\u5e8f\u5b58\u5165stackB\n    while(!stackA.isEmpty()) {\n      stackB.push(stackA.pop());\n    }\n    return stackB.pop();\n  }\n}\n\n")),(0,l.kt)("h3",{id:"\u8868\u793a\u6570\u503c\u7684\u5b57\u7b26\u4e32"},"\u8868\u793a\u6570\u503c\u7684\u5b57\u7b26\u4e32"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u95ee\u9898:\u8bf7\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u8868\u793a\u6570\u503c\uff08\u5305\u62ec\u6574\u6570\u548c\u5c0f\u6570\uff09"),(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"\u6570\u503c"),"\uff08\u6309\u987a\u5e8f\uff09\u53ef\u4ee5\u5206\u6210\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a"),(0,l.kt)("ol",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ol"},"\u82e5\u5e72\u7a7a\u683c"),(0,l.kt)("li",{parentName:"ol"},"\u4e00\u4e2a \u5c0f\u6570 \u6216\u8005 \u6574\u6570"),(0,l.kt)("li",{parentName:"ol"},"\u4e00\u4e2a 'e' \u6216 'E' \uff0c\u540e\u9762\u8ddf\u7740\u4e00\u4e2a \u6574\u6570\uff08\u53ef\u9009\uff09"),(0,l.kt)("li",{parentName:"ol"},"\u82e5\u5e72\u7a7a\u683c")),(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"\u5c0f\u6570"),"\uff08\u6309\u987a\u5e8f\uff09\u53ef\u4ee5\u5206\u6210\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206:"),(0,l.kt)("ol",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ol"},"\u4e00\u4e2a\u7b26\u53f7\u5b57\u7b26\uff08'+' \u6216 '-'\uff09\uff08\u53ef\u9009\uff09"),(0,l.kt)("li",{parentName:"ol"},"\u4e0b\u8ff0\u683c\u5f0f\u4e4b\u4e00",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u81f3\u5c11\u4e00\u4f4d\u6570\u5b57\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u70b9 '.' \uff0c\u540e\u9762\u518d\u8ddf\u7740\u81f3\u5c11\u4e00\u4f4d\u6570\u5b57"),(0,l.kt)("li",{parentName:"ul"},"\u81f3\u5c11\u4e00\u4f4d\u6570\u5b57\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u70b9 '.'"),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u70b9 '.' \uff0c\u540e\u9762\u8ddf\u7740\u81f3\u5c11\u4e00\u4f4d\u6570\u5b57")))),(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"\u6574\u6570"),"\uff08\u6309\u987a\u5e8f\uff09\u53ef\u4ee5\u5206\u6210\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a"),(0,l.kt)("ol",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ol"},"\u4e00\u4e2a\u7b26\u53f7\u5b57\u7b26\uff08'+' \u6216 '-'\uff09\uff08\u53ef\u9009\uff09"),(0,l.kt)("li",{parentName:"ol"},"\u81f3\u5c11\u4e00\u4f4d\u6570\u5b57")),(0,l.kt)("p",{parentName:"blockquote"},"\u90e8\u5206\u6570\u503c\u5217\u4e3e\u5982\u4e0b\uff1a ",(0,l.kt)("inlineCode",{parentName:"p"},'["+100", "5e2", "-123", "3.1416", "-1E-16", "0123"]')),(0,l.kt)("p",{parentName:"blockquote"},"\u90e8\u5206\u975e\u6570\u503c\u5217\u4e3e\u5982\u4e0b\uff1a ",(0,l.kt)("inlineCode",{parentName:"p"},'["12e", "1a3.14", "1.2.3", "+-5", "12e+5.4"]'))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"TODO")),(0,l.kt)("h3",{id:"\u53cd\u8f6c\u94fe\u8868"},"\u53cd\u8f6c\u94fe\u8868"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u95ee\u9898:\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u53cd\u8f6c\u8be5\u94fe\u8868\u5e76\u8f93\u51fa\u53cd\u8f6c\u540e\u94fe\u8868\u7684\u5934\u8282\u70b9\u3002\n1->2->3->4->5->NULL  => 5->4->3->2->1->NULL\n\u53cc\u6307\u9488\u548c\u5934\u63d2\u6cd5\u7684\u601d\u8def\u7c7b\u4f3c,\u90fd\u662f\u57fa\u4e8e\u539f\u94fe\u8868\u8fdb\u884c\u4fee\u6539,\u4f1a\u4fee\u6539\u539f\u94fe\u8868\u7684\u6570\u636e")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"1.\u53cc\u6307\u9488\u6cd5")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u5b9a\u4e49tmp\u5b58\u50a8\u540e\u7ee7\u8282\u70b9"),(0,l.kt)("li",{parentName:"ol"},'cur,pre \u4e3a\u53cc\u6307\u9488,\u4e0d\u65ad\u540e\u79fb\u66f4\u65b0\u5bf9\u5e94"\u6307\u9488\u7684\u6307\u5411"\u4ee5\u53cacur.next\u503c => \u8fc7\u7a0b\u4e2d\u66f4\u65b0 tmp \u7684\u503c')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *  \u65b9\u6cd51: \u53cc\u6307\u9488\u6cd5:\u904d\u5386\u5217\u8868\u7684\u65f6\u5019\u4fee\u6539\u8282\u70b9\u7684next\u6307\u5411\n *  1=>2=>3=>5=>null  =>   null<=1<=2<=3<=5\n */\npublic class ReverseList {\n  public ListNode reverseList(ListNode head) {\n    // \u6307\u5411\u5f53\u524d\u7684\u8282\u70b9,\u968f\u7740\u5faa\u73af\u4e0d\u65ad\u7684\u5411\u540e\u79fb\u52a8(\u6307\u94881)\n    ListNode cur = head;\n    // \u5f00\u59cb\u7684\u65f6\u5019\u6307\u5411\u53cd\u8f6c\u540e\u7684\u5934\u90e8\u8282\u70b9,\u7136\u540e\u968f\u7740\u5faa\u73af\u4e0d\u65ad\u5411\u540e\u79fb\u52a8(\u6307\u94882)\n    ListNode pre = null;\n    // \u4e34\u65f6\u8282\u70b9,\u7528\u4e8e\u8bb0\u5f55cur\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n    ListNode tmp = null;\n    while(cur!=null) {\n      // \u6682\u5b58\u540e\u7ee7\u8282\u70b9 cur.next\n      tmp = cur.next;\n      // \u4fee\u6539 next \u5f15\u7528\u6307\u5411\n      cur.next = pre;\n      // pre \u6682\u5b58 cur\n      pre = cur;\n      // cur \u8bbf\u95ee\u4e0b\u4e00\u8282\u70b9\n      cur = tmp;\n    }\n    return pre;\n  }\n\n  class ListNode {\n    int val;\n    ListNode next;\n\n    ListNode(int x) {\n      this.val = x;\n    }\n  }\n}\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"2.\u5934\u63d2\u6cd5")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488tNode\u6307\u5411\u5c3e\u8282\u70b9"),(0,l.kt)("li",{parentName:"ol"},'\u5b9a\u4e49\u4e00\u4e2ahNode\u53d8\u91cf\u6307\u5411\u5934\u8282\u70b9 => hNode = head; + head = head.next; => "\u6458\u53d6"\u5934\u8282\u70b9'),(0,l.kt)("li",{parentName:"ol"},"\u4fee\u6539\u5934\u8282\u70b9hNode\u7684\u6307\u5411")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * \u94fe\u8868\u53cd\u8f6c:\u5934\u63d2\u6cd5 => \u8fed\u4ee3\u7684\u53d6\u51fa\u5934\u90e8\u8282\u70b9,\u7136\u540e\u4fee\u6539\u5934\u7ed3\u70b9\u7684\u6307\u5411\n *    tNode:\u5b9a\u4e49\u7684\u5c3e\u90e8\u8282\u70b9\n *    hNode:\u5b9a\u4f4d\u5934\u90e8\u8282\u70b9\n */\npublic class ReverseList2 {\n  public ListNode reverseList(ListNode head) {\n    ListNode hNode;\n    ListNode tNode = null;\n    while(head != null) {\n      // \u53d6\u5934\u90e8\u8282\u70b9\n      hNode = head;\n      // \u540e\u79fb\u83b7\u53d6\u540e\u7ee7\u8282\u70b9\n      head = head.next;\n      // \u5c06\u5934\u90e8\u8282\u70b9\u6307\u5411\u5c3e\u90e8\n      hNode.next = tNode;\n      // \u91cd\u65b0\u8bbe\u7f6e\u5c3e\u90e8\u8282\u70b9\n      tNode = hNode;\n    }\n    return tNode;\n  }\n\n  class ListNode {\n    int val;\n    ListNode next;\n\n    ListNode(int x) {\n      this.val = x;\n    }\n  }\n}\n")),(0,l.kt)("h3",{id:"\u5305\u542b-min-\u51fd\u6570\u7684\u6808"},"\u5305\u542b min \u51fd\u6570\u7684\u6808"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u95ee\u9898:\u5b9a\u4e49\u6808\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8bf7\u5728\u8be5\u7c7b\u578b\u4e2d\u5b9e\u73b0\u4e00\u4e2a\u80fd\u591f\u5f97\u5230\u6808\u7684\u6700\u5c0f\u5143\u7d20\u7684 min \u51fd\u6570\u5728\u8be5\u6808\u4e2d\uff0c\u8c03\u7528 min\u3001push \u53ca pop \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(1)"),(0,l.kt)("p",{parentName:"blockquote"},"\u793a\u4f8b"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-java"},"MinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.min();   --\x3e \u8fd4\u56de -3\nminStack.pop();\nminStack.top();      --\x3e \u8fd4\u56de 0\nminStack.min();   --\x3e \u8fd4\u56de -2\n"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// \u5b9e\u73b0\u65b9\u5f0f: \u4f7f\u7528\u94fe\u8868\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u6808,\u94fe\u8868\u7684\u5934\u8282\u70b9\u4f1a\u7ef4\u62a4min,\u5b9e\u73b0min()\u7684\u65f6\u95f4\u590d\u6742\u5ea6O(1)\n// \u540c\u65f6push\u548cpop\u90fd\u90fd\u53ea\u9700\u8981\u64cd\u4f5c1\u6b21,\u4e5f\u662fO(1)\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack obj = new MinStack();\n * obj.push(x);\n * obj.pop();\n * int param_3 = obj.top();\n * int param_4 = obj.min();\n */\npublic class MinStack {\n  private Node head = null;\n\n  /** initialize your data structure here. */\n  public MinStack() {\n  }\n\n  public void push(int x) {\n    if (head == null) {\n      head = new Node(x, x);\n    } else {\n      // \u65b0\u8282\u70b9head\u7684next \u6307\u5411\u4e0a\u4e2a\u8282\u70b9\n      head = new Node(x, Math.min(x, head.min), head);\n    }\n  }\n\n  public void pop() {\n    head = head.next; \n  }\n\n  public int top() {\n    return head.val;\n  }\n\n  public int min() {\n    return head.min;\n  }\n\n  class Node{\n    int val;\n    int min;\n    Node next;\n    public Node(int value, int min) {\n      this.val = value;\n      this.min = min;\n    }\n    public Node(int value, int min, Node next) {\n      this.val = value;\n      this.min = min;\n      this.next = next;\n    }\n  }\n}\n\n")),(0,l.kt)("h3",{id:"\u590d\u6742\u94fe\u8868\u7684\u590d\u5236"},"\u590d\u6742\u94fe\u8868\u7684\u590d\u5236"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u95ee\u9898:\u8bf7\u5b9e\u73b0 copyRandomList \u51fd\u6570\uff0c\u590d\u5236\u4e00\u4e2a\u590d\u6742\u94fe\u8868\u3002\u5728\u590d\u6742\u94fe\u8868\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u9664\u4e86\u6709\u4e00\u4e2a next \u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd8\u6709\u4e00\u4e2a random \u6307\u9488\u6307\u5411\u94fe\u8868\u4e2d\u7684\u4efb\u610f\u8282\u70b9\u6216\u8005 null"),(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/leetbook/read/illustration-of-algorithm/9p0yy1/"},"see")),(0,l.kt)("p",{parentName:"blockquote"},"\u96be\u70b9\uff1a \u5728\u590d\u5236\u94fe\u8868\u7684\u8fc7\u7a0b\u4e2d\u6784\u5efa\u65b0\u94fe\u8868\u5404\u8282\u70b9\u7684 random \u5f15\u7528\u6307\u5411")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"1.\u65b9\u5f0f1:HashMap\u7684\u65b9\u5f0f")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"import java.util.HashMap;\n\npublic class Sol2 {\n    /**\n     * \u65b9\u5f0f1: \u91c7\u7528HashMap\u7684\u65b9\u5f0f\u5b58\u50a8\u5f53\u524d\u94fe\u8868\u8282\u70b9\u4e0e\u65b0\u94fe\u8868\u5bf9\u5e94\u8282\u70b9\u6620\u5c04\u5173\u7cfb\n     * \u9700\u8981\u4e24\u6b21\u904d\u5386\u94fe\u8868,\u4e00\u6b21\u6784\u5efaMap,\u53e6\u4e00\u6b21\u8bbe\u7f6e next\u548crandom\u7684\u503c\n     * \u867d\u7136\u6709\u4e24\u6b21\u904d\u5386,\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662fO(n),\u7a7a\u95f4\u590d\u6742\u5ea6\u662fO(n)\n     */\n    public Node copyRandomList(Node head) {\n        if(head == null) return null;\n        Node cur = head;\n        HashMap<Node,Node> map = new HashMap<>();\n        while(cur != null) {\n            // \u5c06\u62f7\u8d1d\u6e90\u7684\u8282\u70b9\u4fe1\u606f\u4e0e\u65b0\u94fe\u8868\u8282\u70b9\u5bf9\u5e94\n            map.put(cur, new Node(cur.val));\n            cur = cur.next;\n        }\n        cur = head;\n        // \u5faa\u73af\u7684\u65f6\u5019\u4fee\u6539\u4e86Map\u4e2dkey(\u514b\u9686Node)\u7684next\u548crandom\u6307\u5411\n        while(cur !=null) {\n            map.get(cur).next = map.get(cur.next);\n            map.get(cur).random = map.get(cur.random);\n            cur = cur.next;\n        }\n        return map.get(head);\n    }\n}\n\n// Definition for a Node\nclass Node {\n    int val;\n    Node next;\n    Node random;\n\n    public Node(int val) {\n        this.val = val;\n        this.next = null;\n        this.random = null;\n    }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"2.\u65b9\u5f0f2: \u62fc\u63a5+\u62c6\u5206")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\n/**\n * \u62fc\u63a5+\u62c6\u5206\n * \u91c7\u7528\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5197\u4f59\u5e76\u4fee\u6539\u6307\u5411\u5f97\u5230\u65e7\u94fe\u8868\u4e0e\u65b0\u94fe\u8868\u7684\u7ec4\u5408\u94fe\u8868,\u7136\u540e\u62c6\u5206\u65b0\u65e7\u94fe\u8868\n * \u8fd9\u79cd\u65b9\u5f0f\u57fa\u4e8e\u539f\u94fe\u4fee\u6539,\u63a7\u4ef6\u590d\u6742\u5ea6\u4e3aO(1)\n * \u601d\u8def: \n *  1. \u4e00\u6b21\u7ebf\u6027\u8fed\u4ee3: \u5728\u539f\u94fe\u8282\u70b9\u540e\u52a0\u4e0a\u62f7\u8d1d\u8282\u70b9\n *  2. \u4e8c\u6b21\u7ebf\u6027\u8fed\u4ee3: \u904d\u5386\u8bbe\u7f6e\u62f7\u8d1d\u8282\u70b9\u7684random\u503c => \u62f7\u8d1d\u8282\u70b9.random=\u539f\u94fe\u8282\u70b9.random.next\n *  3. \u4e09\u6b21\u7ebf\u6027\u8fed\u4ee3: \u62c6\u5206\u539f\u94fe\u8282\u70b9\u4e0e\u62f7\u8d1d\u8282\u70b9\n *      - \u4e3a\u4e86\u4e0d\u7834\u574f\u539f\u94fe,\u62c6\u5206\u5b8c\u6210\u540e\u8bbe\u7f6e\u539f\u94fe\u7684\u5c3e\u90e8\u8282\u70b9\u7684.next = null\n */\npublic class CopySol2 {\n  public Node copyRandomList(Node head) {\n    if (head == null) return null;\n    Node cur = head;\n    Node tmp = null;\n    // \u4e00\u6b21\u7ebf\u6027\u8fed\u4ee3->\u62fc\u63a5: \u7ed9\u539f\u8282\u70b9\u540e\u65b0\u52a0\u4e00\u4e2a\u62f7\u8d1d\u7684\u65b0\u94fe\u8868\u8282\u70b9\n    while(cur!=null) {\n      // \u590d\u5236\u5f53\u524d\u8282\u70b9\n      tmp = new Node(cur.val);\n      tmp.next = cur.next;\n      cur.next = tmp;\n      cur = tmp.next;// \u6307\u5411\u539f\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\n    }\n    // \u4e8c\u6b21\u7ebf\u6027\u8fed\u4ee3:\u6784\u5efa->\u8bbe\u7f6e\u62f7\u8d1d\u8282\u70b9\u7684 random\n    cur = head;\n    while(cur != null) {\n      // \u8bbe\u7f6e\u62f7\u8d1d\u8282\u70b9\u7684 random\n      if (cur.random != null) {\n        cur.next.random = cur.random.next;\n      }\n      cur =  cur.next.next;\n    }\n    \n    // \u4e09\u6b21\u7ebf\u6027\u8fed\u4ee3: \u62c6\u5206\u5355\u94fe\u8868,\u539f\u5730\u4fee\u6539\u94fe\u8868\u6307\u5411\u5730\u5740\n    Node result = head.next;\n    // \u6307\u5411\u539f\u94fe\u8282\u70b9\n    Node pre = head;\n    // \u6307\u5411\u590d\u5236\u8282\u70b9\n    cur = head.next;\n    while(cur.next != null) {\n      // \u539f\u5730\u4fee\u6539\u539f\u94fe\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u6307\u5411\u5730\u5740\n      pre.next = pre.next.next;\n      // \u539f\u5730\u4fee\u6539\u590d\u5236\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u6307\u5411\u5730\u5740\n      cur.next = cur.next.next;\n      cur = cur.next;\n      pre = pre.next;\n    }\n    // \u5c06\u539f\u94fe\u8868\u5c3e\u8282\u70b9\u4ece\u4ee5\u524d\u7684\u62f7\u8d1d->null\n    pre.next = null;\n    return result;\n  }\n}\n\n// Definition for a Node\nclass Node {\n  int val;\n  Node next;\n  Node random;\n\n  public Node(int val) {\n    this.val = val;\n    this.next = null;\n    this.random = null;\n  }\n}\n\n")))}c.isMDXComponent=!0}}]);